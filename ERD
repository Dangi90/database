-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema University
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema University
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `University` DEFAULT CHARACTER SET utf8 ;
USE `University` ;

-- -----------------------------------------------------
-- Table `University`.`Departments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `University`.`Departments` (
  `depNo` INT NOT NULL,
  `depName` VARCHAR(20) NOT NULL,
  `depTel` CHAR(14) NOT NULL,
  PRIMARY KEY (`depNo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `University`.`Professors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `University`.`Professors` (
  `proNo` CHAR(6) NOT NULL,
  `depNo` INT NOT NULL,
  `proName` VARCHAR(20) NOT NULL,
  `proJumin` CHAR(14) NOT NULL,
  `proHp` CHAR(13) NOT NULL,
  `proEmail` VARCHAR(45) NOT NULL,
  `proAddr` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`proNo`),
  UNIQUE INDEX `proJumin_UNIQUE` (`proJumin` ASC) VISIBLE,
  UNIQUE INDEX `proHp_UNIQUE` (`proHp` ASC) VISIBLE,
  INDEX `fk_Professors_Departments1_idx` (`depNo` ASC) VISIBLE,
  CONSTRAINT `fk_Professors_Departments1`
    FOREIGN KEY (`depNo`)
    REFERENCES `University`.`Departments` (`depNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `University`.`Students`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `University`.`Students` (
  `stdNo` CHAR(8) NOT NULL,
  `proName` CHAR(6) NOT NULL,
  `depNo` INT NOT NULL,
  `stdName` VARCHAR(20) NULL,
  `stdJumin` CHAR(14) NOT NULL,
  `stdHP` CHAR(13) NOT NULL,
  `stdEmail` VARCHAR(45) NULL,
  `stdAddr` VARCHAR(100) NULL,
  PRIMARY KEY (`stdNo`),
  UNIQUE INDEX `stdAddr_UNIQUE` (`stdAddr` ASC) VISIBLE,
  UNIQUE INDEX `stdJumin_UNIQUE` (`stdJumin` ASC) VISIBLE,
  UNIQUE INDEX `stdHP_UNIQUE` (`stdHP` ASC) VISIBLE,
  INDEX `fk_Students_Professors_idx` (`proName` ASC) VISIBLE,
  INDEX `fk_Students_Departments1_idx` (`depNo` ASC) VISIBLE,
  CONSTRAINT `fk_Students_Professors`
    FOREIGN KEY (`proName`)
    REFERENCES `University`.`Professors` (`proNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Students_Departments1`
    FOREIGN KEY (`depNo`)
    REFERENCES `University`.`Departments` (`depNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `University`.`Lecture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `University`.`Lecture` (
  `lecNo` CHAR(6) NOT NULL,
  `proNo` CHAR(6) NOT NULL,
  `lecName` VARCHAR(45) NOT NULL,
  `lecCredit` TINYINT NOT NULL,
  `lecTime` TINYINT NOT NULL,
  `lecClass` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`lecNo`, `proNo`),
  INDEX `fk_Lecture_Professors1_idx` (`proNo` ASC) VISIBLE,
  CONSTRAINT `fk_Lecture_Professors1`
    FOREIGN KEY (`proNo`)
    REFERENCES `University`.`Professors` (`proNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `University`.`Register`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `University`.`Register` (
  `stdNo` CHAR(8) NOT NULL,
  `lecNo` CHAR(6) NOT NULL,
  `proNo` CHAR(6) NOT NULL,
  `regAttenScore` TINYINT NULL,
  `regMidScore` TINYINT NULL,
  `regFinalScore` TINYINT NULL,
  `regEtcScore` TINYINT NULL,
  `regTotal` TINYINT NULL,
  `regGrade` CHAR(1) NULL,
  INDEX `fk_Register_Students1_idx` (`stdNo` ASC) VISIBLE,
  INDEX `fk_Register_Lecture1_idx` (`lecNo` ASC, `proNo` ASC) VISIBLE,
  PRIMARY KEY (`stdNo`, `lecNo`, `proNo`),
  CONSTRAINT `fk_Register_Students1`
    FOREIGN KEY (`stdNo`)
    REFERENCES `University`.`Students` (`stdNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Register_Lecture1`
    FOREIGN KEY (`lecNo`)
    REFERENCES `University`.`Lecture` (`lecNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SET foreign_key_checks = 0;

insert into students (stdNO,depNo,proNo,stdName,stdJumin,stdHp,stdEmail,stdAddr) values
('20101001', 10, 'P10101', '정우성', '760121-1234567', '010-1101-7601', null, '서울'),
('20100102', 10, 'P10101', '이정재', '750611-1234567', '010-1102-7506', null, '서울'),
('20111011', 11, 'P11103', '전지현', '890530-1234567', '010-1103-8905', 'jjh@naver.com', '대전'),
('20111013', 11, 'P11103', '이나영', '790413-1234567', '010-2101-7904', 'lee@naver.com', '대전'),
('20111014', 11, 'P11104', '원빈',  '660912-1234567', '010-2104-6609', 'one@daum.net', '대전'),
('21221010', 22, 'P22110', '장동건', '790728-1234567', '010-3101-7907', 'jang@naver.com', '대구'),
('20120121', 23, 'P23102', '고소영', '840615-1234567', '010-4101-8406', 'goso@daum.net', '대구'),
('22311011', 31, 'p31104', '김연아', '651021-1234567', '010-5101-6510', 'yuna@daum.net', '대구'),
('22311014', 31, 'p31104', '유재석', '721128-1234567', '010-6101-7211', null, '부산'),
('22401001', 40, 'p40101', '강호동', '920907-1234567', '010-7103-9209', null, '부산'),
('22401002', 40, 'p40101', '조인성', '891209-1234567', '010-7104-8912', 'join@gmail.com', '광주'),
('22421003', 42, 'p42103', '강동원', '770314-1234567', '010-8101-7703', 'dong@naver.com', '광주');

insert into professors (proNo, depno, proname, projumin, proHp, proEmail, proAddr) values
('P10101', 10,'김유신',   '750120-1234567','010-1101-1976','kimys@hg.ac.kr','서울'),
('P10102', 10,'계백',      '740610-1234567','010-1102-1975','gaeback@hg.ac.kr','서울'),
('P11101', 11,'김관창',   '880529-1234567','010-1103-1989','kwanch@hg.ac.kr','대전'),
('P11103', 11,'김춘추',   '780412-1234567','010-2101-1979','kimcc@hg.ac.kr','대전'),
('P11104', 11,'이사부',   '650911-1234567','010-2104-1966','leesabu@hg.ac.kr','대전'),
('P22110', 22,'장보고',   '780727-1234567','010-3101-1979','jangbg@hg.ac.kr','대구'),
('P23102', 23,'선덕여왕',   '830614-1234567','010-4101-1984','gueen@hg.ac.kr','대구'),
('P31101', 31,'강감찬',   '641020-1234567','010-5101-1965','kang@hg.ac.kr','대구'),
('P31104', 31,'신사임당',   '711127-1234567','010-6101-1972','sinsa@hg.ac.kr','부산'),
('P40101', 40,'이이',      '910906-1234567','010-7103-1992','leelee@hg.ac.kr','부산'),
('P40102', 40,'이황',      '881208-1234567','010-7104-1989','hwang@hg.ac.kr','광주'),
('P42103', 42,'송상현',   '760313-1234567','010-8101-1977','ssh@hg.ac.kr','광주');

insert into departments (depNo, depname, deptel) values
(10,'국어국문학과','051-510-1010'),
(11,'영어영문학과','051-510-1011'),
(20,'경영학과','051-510-1020'),
(21,'경제학과','051-510-1021'),
(22,'정치외교학과','051-510-1022'),
(23,'사회복지학과','051-510-1023'),
(30,'수학과','051-510-1030'),
(31,'통계과','051-510-1031'),
(32,'생명과학과','051-510-1032'),
(40,'기계공학과','051-510-1040'),
(41,'전자공학과','051-510-1041'),
(42,'컴퓨터공학과','051-510-1042');

insert into lectures (lecNo, proNo, lecName, lecCredit, lecTime, lecClass) values
('101001','P10101','대학 글쓰기',2 ,10 ,'본102'),
('101002','P10102','한국어음운론',3 ,30 ,'본102'),
('101003','P10102','한국현대문학사',3 ,30 ,'본103'),
('111011','P11103','중세영문학',3 ,25 ,'본201'),
('111012','P11104','영미시',3 ,25 ,'본201'),
('231110','P23102','사회복지학개론',1 ,8 ,'별관103'),
('311002','P31101','통계학의 이해',2 ,16 ,'별관303'),
('311003','P31104','기초 통계학',3 ,26 ,'별관303'),
('401019','P40101','기계역학',3 ,36 ,'공학관 102'),
('421012','P42103','데이터베이스',3 ,32 ,'공학관 103');

insert into register (stdNo, lecNo, proNo, regAttenScore, regMidScore, regFinalScore, regEtcScore, regTotal, regGrade) values
('20101001','101001','P10101',null,null,null,null,null,null),
('20101001','101002','P10102',null,null,null,null,null,null),
('20111013','111011','P11103',null,null,null,null,null,null),
('21231002','231110','P23102',null,null,null,null,null,null),
('22401001','401019','P40101',null,null,null,null,null,null),
('22401001','421012','P42103',null,null,null,null,null,null),
('20101001','101003','P10102',null,null,null,null,null,null),
('22421003','311003','P31104',null,null,null,null,null,null),
('22421003','421012','P42103',null,null,null,null,null,null),
('20111013','111012','P11104',null,null,null,null,null,null);


#문제1.
select stdNo, stdname,stdHp,d.depNo,d.depName  FROM STUDeNTs S JOin departments D on S.depNO = D.depNo;

#문제2
SELECT * FROM professors P JOin departments D on p.depNO = D.depNo;

#문제3
SELECT lecNo, lecName, proName, proHp FROM lectures L Join professors P on L.proNO = p.prono;

#문제4
SELECT lecNO, lecName, p.proNO, proName, proHp, d.depNo, depName
FROM lectures L
Join professors P on L.proNO = p.prono
JOIN departments D on p.depNo = p.depNo;

#문제5
SELECT stdNo, stdName, lecNo, lecName, s.proNo, proName
FROM students S
Join professors P on s.proNo = p.proNo
Join  lectures L on p.proNo = l.proNo;

#문제6
UPDATE Register
SET regAttenScore = FLOOR(1 + RAND() * 100),
    regMidScore = FLOOR(1 + RAND() * 100),
    regfinalScore = FLOOR(1 + RAND() * 100);
    
#문제7
UPDATE register
SET	regTotal = (regAttenScore + regMidScore +regFinalScore)/3 ;

#문제8
UPDATE Register
SET regGrade = CASE
    WHEN regTotal >= 90 THEN 'A'
    WHEN regTotal >= 80 THEN 'B'
    WHEN regTotal >= 70 THEN 'C'
    WHEN regTotal >= 60 THEN 'D'
    ELSE 'F'
END;

#문제9
SELECT regTotal as 총점 FROM register ORDER by regtotal desc limit 1;

#문제10
SELECT s.stdName, regTotal as '총점'
FROM register R  JOIN STUDENTS S ON s.stdNo = r.stdNo WHERE stdName = '정우성';

#SELECT AVG(total_score) AS average_total_score


